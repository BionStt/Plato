@using Plato.Entities.Extensions
@model EntityViewModel<Article, Comment>
@{
    var commentText = T["comment"];
    var commentsText = T["comments"];
}

@if (Model.Replies != null)
{
    var offset = Model.Pager.Offset;
    var rowOffset = Model.Pager.RowOffset;
    var title = Model.Pager.Total == 1
        ? $"{Model.Pager.Total.ToPrettyInt()} {commentText.Value}"
        : $"{Model.Pager.Total.ToPrettyInt()} {commentsText.Value}";

    <h6>@title</h6>
    <hr />

    <div data-provide="infiniteScroll"
         data-infinite-scroll-url="@Model.Pager.Url"
         data-infinite-scroll-offset="@offset"
         data-infinite-scroll-row-offset="@rowOffset"
         data-infinite-scroll-page="@Model.Pager.Page"
         data-infinite-scroll-total-pages="@Model.Pager.TotalPages">
        <div class="infinite-scroll-loader" data-type="previous"></div>
        @foreach (var comment in Model.Replies.Data)
        {
            comment.RowOffset = rowOffset;
            comment.Offset = offset;
            @await DisplayAsync(new View("ArticleCommentListItem", new
            {
                model = new EntityReplyListItemViewModel<Article, Comment>()
                {
                    Entity = Model.Entity,
                    Reply = comment,
                }
            }))
            {
                rowOffset++;
            }
        }
        <div class="infinite-scroll-loader" data-type="next"></div>
    </div>
    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
     {
         <div class="my-4">
             <card>
                 <card-body>
                     <span class="text-muted">
                         @if (base.CurrentUser == null)
                         {
                             @T["Can we improve this article?"]
                             <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                             @T["or"]
                             <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                             @T["to comment"]
                         }
                         else
                         {
                             <a href="#" data-provide="postReply">@T["Post a comment"]</a>
                         }
                     </span>
                 </card-body>
             </card>
         </div>
     }

}
else
{
    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
     {
         <div class="my-4">
             <card>
                 <card-body>
                     <i class="fal fa-reply"></i>
                     <span class="text-muted ml-2">
                         @if (base.CurrentUser == null)
                         {
                             @T["No comments."]
                             <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                             @T["or"]
                             <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                             @T["to comment"]
                         }
                         else
                         {
                             @T["Need more help?"]
                             <a href="#" data-provide="postReply">@T["Post a comment"]</a>
                         }
                     </span>
                 </card-body>
             </card>
         </div>
     }
}

@if (Model.Pager.Enabled)
{
    <div class="mt-4">
        <pager model="@Model.Pager"></pager>
    </div>
}
