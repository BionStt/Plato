@model TopicReplyListItemViewModel
@{
    var css = Model.ArticleComment.Offset == Model.ArticleComment.SelectedOffset
        ? "markdown-body p-3 infinite-scroll-item infinite-scroll-item-active"
        : "markdown-body p-3 infinite-scroll-item";
    var quoteId = "quote" + Model.ArticleComment.Id;
}

<div class="topic-reply-left">
    <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-id="@Model.ArticleComment.CreatedUserId" asp-route-alias="@Model.ArticleComment.CreatedBy.Alias" class="avatar-link">
        <avatar data-toggle="tooltip" title="@Model.ArticleComment.CreatedBy.DisplayName" class="avatar" url="@Model.ArticleComment.CreatedBy.Avatar.Url" />
    </a>
</div>
<div class="topic-reply-body">
    <card class="card card-body-flush">
        <card-title>
            <div data-infinite-scroll-offset="@Model.ArticleComment.Offset">
                <div class="card-title float-left">
                    <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-id="@Model.ArticleComment.CreatedUserId" asp-route-alias="@Model.ArticleComment.CreatedBy.Alias" class="avatar-link">
                        @Model.ArticleComment.CreatedBy.DisplayName
                    </a>
                    @T["posted "]
                    <span data-toggle="tooltip" title="@Model.ArticleComment.CreatedDate">
                        @Model.ArticleComment.CreatedDate.ToPrettyDate()
                    </span>
                    @if (Model.ArticleComment.IsSpam)
                    {
                        <span class="badge badge-info" data-toggle="tooltip" title="@T["This reply has been flagged as SPAM and is only visible to you as you have permission to view replies flagged as SPAM"]">@T["SPAM"]</span>
                    }
                    @if (Model.ArticleComment.IsPrivate)
                    {
                        <span data-toggle="tooltip" title="@T["This reply is private and only visible to you as you have permission to view private replies"]" class="badge badge-primary">@T["Private"]</span>
                    }
                    @if (Model.ArticleComment.IsDeleted)
                    {
                        <span class="badge badge-danger" data-toggle="tooltip" title="@T["This reply has been deleted and is only visible to you as you have permission to view deleted replies"]">@T["Deleted"]</span>
                    }
                    @if (Model.ArticleComment.IsClosed)
                    {
                        <span class="badge badge-success">
                            @T["Closed"]
                        </span>
                    }
                </div>
                <navigation name="topic-reply"
                            model="Model.Reply"
                            class="nav navbar p-0 float-right"
                            arrow-css="dropdown-arrow"
                            child-ul-css-class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in"/>
            </div>
        </card-title>
        <card-body>
            <div class="@css" data-infinite-scroll-highlight="@Model.ArticleComment.Offset" data-provide="markdownBody">
                @Html.Raw(@Model.ArticleComment.Html)
            </div>
            <div class="hidden" 
                 id="@quoteId"
                 data-reply-url="@Url.Action("Jump", "Home", new { id = Model.Article.Id, alias = Model.Article.Alias, replyId = Model.ArticleComment.Id })"
                 data-display-name="@Model.ArticleComment.CreatedBy.DisplayName">@Model.ArticleComment.Message</div>
           
            <navigation name="topic-reply-footer"
                        model="Model.Reply"
                        enable-list="false" />
           
        </card-body>
    </card>
</div>

