@using Plato.Entities.Extensions
@model Article
@{
    var postPermission = Plato.Articles.Permissions.PostArticleComments;
    var editPermission = base.CurrentUser?.Id == Model.CreatedBy.Id
        ? Plato.Articles.Permissions.EditOwnArticles
        : Plato.Articles.Permissions.EditAnyArticle;
}

<authorize asp-permission="@editPermission.Name">
    <authorize-success>
        <a asp-route-area="Plato.Articles" asp-route-controller="Home" asp-route-action="Edit" asp-route-opts.id="@Model.Id" asp-route-opts.alias="@Model.Alias" data-toggle="tooltip" title="@T["Edit Article"]" class="btn bg-transparent text-muted" role="button">
            <i class="fal fa-pencil"></i> 
        </a>
    </authorize-success>
</authorize>

@if (Model.IsLocked)
{
    <authorize asp-permission="@postPermission.Name">
        <authorize-success>
            <div class="btn btn-danger ml-2" style="cursor: default;" title="@T["This article is locked and is not accepting new comments"]" data-toggle="tooltip">
                <i class="fal fa-fw fa-lock"></i>
                @T["Locked"]
            </div>
        </authorize-success>
    </authorize>
}
else
{
    @if (!Model.IsHidden())
    {
        <authorize asp-permission="@postPermission.Name">
            <authorize-success>
                <a asp-route-action="Create" class="btn btn-primary ml-2" data-provide="postReply" title="@T["Add Reply"]">
                    <i class="fal fa-fw fa-plus"></i>
                    @T["Add Comment"]
                </a>
            </authorize-success>
        </authorize>
    }
}