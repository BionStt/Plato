@model CategoryListViewModel<Category>

@if (Model.Options.CategoryId == 0)
{
    if (Model.Categories.Any())
    {
        @foreach (var category in Model.Categories)
         {
             var details = category.GetOrCreate<CategoryDetails>();
             var cardHeaderCss = category.Children.Any()
                 ? "card-header"
                 : "card-header border-bottom-0";
             <card class="card card-body-flush">
                 <card-title class="@cardHeaderCss">
                     <ol class="list-inline text-muted float-right">
                         <li class="list-inline-item">
                             <span title="@T["Topics"]" data-toggle="tooltip">
                                 @details.TotalEntities.ToPrettyInt() <i class="fal fa-comment-alt-lines"></i>
                             </span>
                         </li>
                         <li class="list-inline-item">
                             <span title="@T["Replies"]" data-toggle="tooltip">
                                 @details.TotalReplies.ToPrettyInt() <i class="fal fa-comment-alt fa-flip-horizontal"></i>
                             </span>
                         </li>
                     </ol>
                     <h6 class="card-title">
                         <a asp-route-area="Plato.Discuss.Categories" asp-route-controller="Home" asp-route-action="Index" asp-route-opts.categoryId="@category.Id" asp-route-opts.alias="@category.Alias">
                             @category.Name
                         </a>
                     </h6>
                     @if (!String.IsNullOrEmpty(category.Description))
                     {
                         <span class="text-muted">
                             @category.Description
                         </span>
                     }
                 </card-title>
                 <card-body>
                     @if (category.Children.Any())
                     {
                         <ul class="list-group list-group-flush list-group-hover">
                             @foreach (var child in category.Children)
                             {
                                 <li class="list-group-item list-group-item-action">
                                     @await DisplayAsync(new View("ChannelListItem", new
                                     {
                                         category = child,
                                         options = Model.Options
                                     }))
                                 </li>
                             }
                         </ul>
                     }
                 </card-body>
             </card>
         }
    }
    else
    {
        <card class="card card-body-flush">
            <card-title>
                <h6 class="card-title">@T["Categories"]</h6>
            </card-title>
            <card-body>
                <ul class="list-group list-group-flush list-group-hover">
                    <li class="list-group-item">
                        @T["No categories found"]
                    </li>
                </ul>
            </card-body>
        </card>
    }
}
else
{
    @if (Model.Categories.Any())
     {
         <card class="card card-body-flush">
             <card-title>
                 <h6 class="card-title">@T["Child Categories"]</h6>
             </card-title>
             <card-body>
                 <ul class="list-group list-group-flush list-group-hover">
                     @foreach (var category in Model.Categories)
                     {
                         <li class="list-group-item list-group-item-action">
                             @await DisplayAsync(new View("ChannelListItem", new
                             {
                                 category = category,
                                 options = Model.Options
                             }))
                         </li>
                     }
                 </ul>
             </card-body>
         </card>
    }
}

