@using Plato.Entities.Extensions
@model EntityViewModel<Topic, Reply>
@{
    var replyText = T["reply"];
    var repliesText = T["replies"];
}

@if (Model.Replies != null)
{
    var offset = Model.Pager.Offset;
    var rowOffset = Model.Pager.RowOffset;
    var title = Model.Pager.Total == 1
        ? $"{Model.Pager.Total.ToPrettyInt()} {replyText.Value}"
        : $"{Model.Pager.Total.ToPrettyInt()} {repliesText.Value}";

    <h6>@title</h6>
    <hr />

    <div data-provide="infiniteScroll"
         data-infinite-scroll-url="@Model.Pager.Url"
         data-infinite-scroll-offset="@offset"
         data-infinite-scroll-row-offset="@rowOffset"
         data-infinite-scroll-page="@Model.Pager.Page"
         data-infinite-scroll-total-pages="@Model.Pager.TotalPages">
        <div class="infinite-scroll-loader" data-type="previous"></div>
        @foreach (var reply in Model.Replies.Data)
        {
            reply.Offset = rowOffset;
            reply.SelectedOffset = offset;
            @await DisplayAsync(new View("TopicReplyListItem", new
            {
                model = new EntityReplyListItemViewModel<Topic, Reply>()
                {
                    Entity = Model.Entity,
                    Reply = reply,
                }
            }))
            {
                rowOffset++;
            }
        }
        <div class="infinite-scroll-loader" data-type="next"></div>
    </div>

    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
    {
        <div class="my-4">
            <card>
                <card-body>
                    <span class="text-muted">
                        @if (base.CurrentUser == null)
                        {
                            @T["Enjoying the conversation?"]
                            <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                            @T["or"]
                            <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                            @T["to post your reply"]
                        }
                        else
                        {
                            <a href="#" data-provide="postReply">@T["Post a reply"]</a>
                        }
                    </span>
                </card-body>
            </card>
        </div>
    }
}
else
{
    @if (!Model.Entity.IsHidden() && !Model.Entity.IsLocked)
    {
        <div class="my-4">
            <card>
                <card-body>
                    <i class="fal fa-reply"></i>
                    <span class="text-muted ml-2">
                        @if (base.CurrentUser == null)
                        {
                            @T["No replies have been posted yet."]
                            <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Login" asp-route-returnUrl="@Context.Request.Path">@T["Login"]</a>
                            @T["or"]
                            <a asp-route-area="Plato.Users" asp-route-controller="Account" asp-route-action="Register" asp-route-returnUrl="@Context.Request.Path">@T["register"]</a>
                            @T["to post your reply"]
                        }
                        else
                        {
                            @T["No replies have been posted yet."]
                            <a href="#" data-provide="postReply">@T["Be the first"]</a>
                        }
                    </span>
                </card-body>
            </card>
        </div>
    }

}

@if (Model.Pager.Enabled)
{
    <div class="mt-4">
        <pager model="@Model.Pager"></pager>
    </div>
}
