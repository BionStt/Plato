@model IDictionary<string, ChartViewModel<AggregatedResult<DateTimeOffset>>>
@{

    var entities = Model.FirstOrDefault(m => m.Key == "entities");
    var replies = Model.FirstOrDefault(m => m.Key == "replies");

    var entityLabels = entities.Value.Data?.SerializeLabels() ?? "[]";
    var entityData = entities.Value.Data?.SerializeCounts() ?? "[]";

    var replyLabels = replies.Value.Data?.SerializeLabels() ?? "[]";
    var replyData = replies.Value.Data?.SerializeCounts() ?? "[]";

    var chartId = "newByDateChart";

    var total = entities.Value?.Data?.Total() ?? 0;
    if (replies.Value?.Data != null)
    {
        total += replies.Value.Data.Total();
    }
}

<card>
    <card-body>
        <i class="fal fa-plus float-right"></i>
     
        <h5 class="d-inline">@total.ToPrettyInt()</h5>
      
        <br />
        @if (string.IsNullOrEmpty(entities.Value.Options.Title))
        {
            @T["New Contributions"]
        }
        else
        {
            @T[entities.Value.Options.Title]
        }
        <div class="position-relative mt-3" style="height: 150px;">
            <canvas id="@chartId" class="w-100"></canvas>
        </div>
    </card-body>
</card>

<script section="Footer">
    
    if (typeof window.$.Plato.Reports === "undefined") {
        throw new Error("$.Plato.Reports Required");
    }

    if (typeof window.$.Plato.Charts === "undefined") {
        throw new Error("$.Plato.Charts Required");
    }

    $(function (win, doc, $) {

        "use strict";

        var app = win.$.Plato,
            charts = win.$.Plato.Charts;

        app.ready(function() {

            charts.initLine("@chartId", {
                labels: @Html.Raw(entityLabels),
                datasets: [
                    {
                        label: 'New Entities',
                        fill: true,
                        backgroundColor: Chart.helpers.color(charts.colors.blue).alpha(0.1).rgbString(),
                        borderColor: charts.colors.blue,
                        borderWidth: 1,
                        lineWidth: 1,
                        pointRadius: 0,
                        pointHoverRadius: 0,
                        data: @Html.Raw(entityData)
                    },
                    {
                        label: 'New Replies',
                        fill: true,
                        backgroundColor: Chart.helpers.color(charts.colors.green).alpha(0.1).rgbString(),
                        borderColor: charts.colors.blue,
                        borderWidth: 1,
                        lineWidth: 1,
                        pointRadius: 0,
                        pointHoverRadius: 0,
                        data: @Html.Raw(replyData)
                    }
                ]
            });

        });


    }(window, document, jQuery));

</script>