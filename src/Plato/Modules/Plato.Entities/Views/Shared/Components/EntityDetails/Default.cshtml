@model EntityDetailsViewModel
@{
    var viewText = Model.Entity.TotalViews == 1
        ? "view"
        : "views";
    var urls = await Model.Entity.GetEntityUrlsAsync();
    var linkText = urls.AnchorUrls.Count == 1
        ? "link"
        : "links";
    var imageText = urls.ImageUrls.Count == 1
        ? "image"
        : "images";
}

<card class="card card-body-flush">
    <card-title>
        <h6 class="card-title">@T["Details"]</h6>
    </card-title>
    <card-body>
        <ul class="list-group list-group-flush">
            <li class="list-group-item">
                @T["Posted"]: <date utc="@Model.Entity.CreatedDate"></date>
            </li>
            @if (Model.Entity.EditedDate != null)
            {
                <li class="list-group-item">
                    @T["Updated"]: <date utc="@Model.Entity.EditedDate"></date>
                </li>
            }
            <li class="list-group-item">
                @T["Latest Reply"]: <date utc="@Model.Entity.LastReplyDate"></date>
            </li>
            <li class="list-group-item">
                @Model.Entity.TotalViews @T[viewText]
            </li>
            @if (urls.AnchorUrls.Count > 0 || urls.ImageUrls.Count > 0)
            {
                <li class="list-group-item">
                    
                    @if (urls.AnchorUrls.Count > 0)
                    {
                        <span>@urls.AnchorUrls.Count.ToPrettyInt()</span>
                        @linkText;
                    }
                  
                    @if (urls.ImageUrls.Count > 0)
                    {
                
                        <span>@urls.ImageUrls.Count.ToPrettyInt()</span>
                        @imageText
         
                    }
                    
                </li>
            }
        </ul>
    </card-body>
</card>
