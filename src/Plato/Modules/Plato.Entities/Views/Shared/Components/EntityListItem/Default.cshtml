@model EntityListItemViewModel<Entity>

<div class="float-right text-right">
    <ol class="list-inline text-muted">
        @if (Model.Entity.TotalReplies > 0)
        {
            <li class="list-inline-item">
                <span title="@T["Replies"]" data-toggle="tooltip">
                    @Model.Entity.TotalReplies.ToPrettyInt() <i class="fal fa-comment-alt-lines"></i>
                </span>
            </li>
        }
        @if (Model.Entity.TotalViews > 0)
        {
            <li class="list-inline-item">
                <span title="@T["Views"]" data-toggle="tooltip">
                    @Model.Entity.TotalViews.ToPrettyInt() <i class="fal fa-eye"></i>
                </span>
            </li>
        }
        @if (!String.IsNullOrEmpty(Model.Options.Search))
        {
            <li class="list-inline-item">
                <span data-toggle="tooltip" title="@T["Relevance"]">
                    @Model.Entity.Relevance% <i class="fal fa-search"></i>
                </span>
            </li>
        }
    </ol>
</div>

<a asp-route-area="@Model.Entity.ModuleId" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" class="font-weight-bold">
    @Html.Raw(Model.Entity.Title.HighlightTerms(Model.Options.Search))
</a>
@if (Model.Entity.IsPinned)
{
    <span title="@T["This content is pinned and is probably important"]" data-toggle="tooltip" class="d-inline-block mx-1">
        <i class="fal fa-thumbtack"></i>
    </span>
}
<div class="text-muted">
    @Html.Raw(Model.Entity.Abstract.HighlightTerms(Model.Options.Search))
</div>
<div>
    @if (Model.Entity.LastReplyDate != null)
    {
        <div class="float-right">
            <a asp-route-area="Plato.Discuss" asp-route-controller="Home" asp-route-action="Reply" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" asp-route-opts.replyId="@Model.Entity.LastReplyId" class="@Model.Entity.LastReplyBy?.Css.StaffCss">
                <date utc="@Model.Entity.LastReplyDate"></date>
            </a>
        </div>
    }
    @T["By"] <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.CreatedUserId" asp-route-opts.alias="@Model.Entity.CreatedBy.Alias" class="@Model.Entity.CreatedBy?.Css.StaffCss">@Model.Entity.CreatedBy.DisplayName</a>,
    <date utc="@Model.Entity.CreatedDate" itemprop="createdDate" data-toggle="tooltip"/>
    @if (Model.Entity.IsPrivate)
    {
        if (Model.Entity.CreatedUserId == base.CurrentUser.Id)
        {
            <span class="badge badge-warning" data-toggle="tooltip" title="@T["This contribution is private and only visible as you are the author"]">@T["Private"]</span>
        }
        else
        {
            <span class="badge badge-warning" data-toggle="tooltip" title="@T["This contribution is private and only visible as you have permission to view private contributions"]">@T["Private"]</span>
        }
    }
    @if (Model.Entity.IsHidden)
    {
        <span class="badge badge-primary" data-toggle="tooltip" title="@T["This contribution is hidden and only visible as you have permission to view hidden contributions"]">@T["Hidden"]</span>
    }
    @if (Model.Entity.IsSpam)
    {
        <span class="badge badge-info" data-toggle="tooltip" title="@T["This contribution has been flagged as SPAM and is only visible as you have permission to view contributions flagged as SPAM"]">@T["SPAM"]</span>
    }
    @if (Model.Entity.IsDeleted)
    {
        <span class="badge badge-danger" data-toggle="tooltip" title="@T["This contribution has been deleted and is only visible as you have permission to view deleted contributions"]">@T["Deleted"]</span>
    }
</div>


