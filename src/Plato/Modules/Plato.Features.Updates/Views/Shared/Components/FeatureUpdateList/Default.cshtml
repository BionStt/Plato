@using Plato.Features.Updates
@model FeatureUpdatesViewModel
@{
    var enablePermission = Permissions.UpdateFeatures;
}

<card class="card card-body-flush">
    <card-title>
        <h6 class="card-title d-inline-block">@T["Updates"]</h6>
    </card-title>
    <card-body>

        <ul class="list-group list-group-flush list-group-hover">
            @{
                var features = Model.Features?.OrderBy(o => o.Descriptor.Name);
            }
            @if (features != null)
            {
                foreach (var feature in features)
                {
                    <li class="list-group-item list-group-item-action">
                        <div class="row">
                            <div class="col-lg-9">
                                <h6>
                                    @feature.Descriptor.Name
                                    @if (!String.IsNullOrEmpty(feature.Version))
                                    {
                                        <span class="badge badge-secondary badge-pill">
                                            @feature.Version
                                        </span>
                                    }
                                </h6>

                                @if (!String.IsNullOrEmpty(feature.Descriptor.Description))
                                {
                                    @feature.Descriptor.Description<br />
                                }

                                @if (!string.IsNullOrEmpty(feature.Descriptor.Category))
                                {
                                    <div class="text-muted">
                                        @T["By"]
                                        @if (!string.IsNullOrEmpty(feature.Descriptor.WebSite))
                                        {
                                            <a href="@feature.Descriptor.WebSite" target="_blank">@feature.Descriptor.Author</a>
                                        }
                                        else
                                        {
                                            @feature.Descriptor.Author
                                        }
                                        @if (!string.IsNullOrEmpty(@feature.Descriptor.Category))
                                        {
                                            <span>- @feature.Descriptor.Category</span>
                                        }

                                    </div>
                                }
                                
                            </div>
                            <div class="col-md-3 text-right">
                                <authorize asp-permission="@enablePermission.Name">
                                    <authorize-success>
                                        <button type="submit" asp-controller="Admin" asp-action="Update" asp-route-id="@feature.ModuleId" class="btn btn-primary" itemprop="UnsafeUrl">
                                            @T["Update"]
                                        </button>
                                    </authorize-success>
                                </authorize>
                            </div>
                        </div>
                    </li>
                }
            }
            else
            {
                <li class="list-group-item">
                    @T["No updates available"]
                </li>
            }

        </ul>

    </card-body>
</card>
