@model FeaturesViewModel

<ul class="list-group list-group-flush list-group-hover">
    @{
        var features = Model.Features.OrderBy(o => o.Descriptor.Name);
    }
    @foreach (var feature in features)
    {
        <li class="list-group-item list-group-item-action">
            <div class="row">
                <div class="col-md-9">
                    <h6>
                        @feature.Descriptor.Name
                        @if (!String.IsNullOrEmpty(feature.Version))
                        {
                            <span class="badge badge-secondary badge-pill">
                                @feature.Version
                            </span>
                        }
                    </h6>

                    @if (!String.IsNullOrEmpty(feature.Descriptor.Description))
                    {
                        @feature.Descriptor.Description<br />
                    }
                    
                    @if (!string.IsNullOrEmpty(feature.Descriptor.Category))
                    {
                        <div class="text-muted">
                            @T["By"]
                            @if (!string.IsNullOrEmpty(feature.Descriptor.WebSite))
                            {
                                <a href="@feature.Descriptor.WebSite" target="_blank">@feature.Descriptor.Author</a>
                            }
                            else
                            {
                                @feature.Descriptor.Author
                            }
                            @if (!string.IsNullOrEmpty(@feature.Descriptor.Category))
                            {
                                <span>- @feature.Descriptor.Category</span>
                            }
                                               
                        </div>
                    }

                    @{
                        var dependencyNames = feature.FeatureDependencies
                            .OrderBy(o => o.ModuleId)
                            .Select(d => d.ModuleId).ToArray();
                        var dependentNames = feature.DependentFeatures
                            .OrderBy(o => o.ModuleId)
                            .Select(d => d.ModuleId).ToArray();
                    }

                </div>
                <div class="col-md-3 text-right">
                    <span data-toggle="tooltip" title="@T["Feature dependencies:"] @String.Join(", ", dependencyNames)" class="text-muted mx-2">
                        @if (dependencyNames.Length > 0)
                        {
                            <i class="fal fa-code-branch fa-flip-vertical"></i>
                        }
                        else
                        {
                            @T["No dependencies"]
                        }
                    </span>
                    <span data-toggle="tooltip" title="@T["Dependentt feature:"] @String.Join(", ", dependentNames)" class="text-muted mx-2">
                        @if (dependentNames.Length > 0)
                        {
                            <i class="fal fa-code-branch"></i>
                        }
                        else
                        {
                            @T["No dependent features"]
                        }
                    </span>
                    @if (!feature.IsRequired)
                    {
                        @if (!feature.IsEnabled)
                        {
                            <button type="submit" asp-controller="Admin" asp-action="Enable" asp-route-id="@feature.ModuleId" class="btn btn-primary" itemprop="UnsafeUrl">
                                @T["Enable"]
                            </button>
                        }
                        else
                        {
                            <button type="submit" asp-controller="Admin" asp-action="Disable" asp-route-id="@feature.ModuleId" class="btn btn-secondary" itemprop="UnsafeUrl">
                                @T["Disable"]
                            </button>
                        }
                    }

                </div>
            </div>
        </li>
    }
</ul>