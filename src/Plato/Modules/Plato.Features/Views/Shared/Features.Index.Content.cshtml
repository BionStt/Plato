@model FeaturesViewModel

<ul class="list-group list-group-hover">
    
    @{
        var features = Model.Features.OrderBy(o => o.Name);
    }

    @foreach (var feature in features)
    {
        <li class="list-group-item">

            <div class="row">
                <div class="col-md-9">
                    <div class="form-check custom-control custom-checkbox">
                        <h5>
                            <input type="checkbox" class="custom-control-input" name="featureIds" value="@feature.Id" id="@feature.Id">
                            <label class="custom-control-label pr-4" for="@feature.Id">
                                @feature.Name
                            </label>
                        </h5>
                    </div>

                    @if (!String.IsNullOrEmpty(feature.Description))
                    {
                        @feature.Description<br/>
                    }


                    @{
                        var dependencyNames = feature.FeatureDependencies
                            .OrderBy(o => o.Id)
                            .Select(d => d.Id).ToArray();
                        var dependentNames = feature.DependentFeatures
                            .OrderBy(o => o.Id)
                            .Select(d => d.Id).ToArray();
                    }

               

                </div>

                <div class="col-md-3 text-right">

                    <span data-toggle="tooltip" title="@T["Feature dependencies:"] @String.Join(", ", dependencyNames)" class="text-muted mx-2">
                        @if (dependencyNames.Length > 0)
                        {
                            <i class="fa fa-code-branch fa-flip-vertical"></i>
                        }
                        else
                        {
                            @T["No dependencies"]
                        }
                    </span>
                    <span data-toggle="tooltip" title="@T["Dependentt feature:"] @String.Join(", ", dependentNames)" class="text-muted mx-2">
                        @if (dependentNames.Length > 0)
                        {
                            <i class="fa fa-code-branch"></i>
                        }
                        else
                        {
                            @T["No dependent features"]
                        }
                    </span>

                    @if (!feature.IsEnabled)
                    {
                        <button type="submit" asp-controller="Admin" asp-action="Enable" asp-route-id="@feature.Id" class="btn btn-primary btn-sm" itemprop="UnsafeUrl">@T["Enable"]</button>
                    }
                    else
                    {
                        <button type="submit" asp-controller="Admin" asp-action="Disable" asp-route-id="@feature.Id" class="btn btn-default btn-sm" itemprop="UnsafeUrl">@T["Disable"]</button>
                    }


                </div>
            </div>

        </li>
    }
</ul>
