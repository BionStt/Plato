@model EntityListItemViewModel<Idea>
@{
    var details = Model.Entity.GetOrCreate<IdeaDetails>();
    var voteText = Model.Entity.TotalRatings == 1 ? T["vote"] : T["votes"];
    var repliesText = Model.Entity.TotalReplies == 1 ? T["reply"] : T["replies"];
    string voteCss = "votes", ratingCss = "rating";
    
    if (Model.Entity.TotalRatings > 0)
    {
        voteCss = "counter-outline-info";
    }
    if (Model.Entity.SummedRating > 0)
    {
        ratingCss = "counter-outline-primary";
    }
    if (Model.Entity.SummedRating < 0)
    {
        ratingCss = "counter-outline-danger";
    }
    if (Model.Entity.SummedRating < -10)
    {
        ratingCss = "counter-danger";
    }

}

<div class="list-left list-left-2x counter-group">
    <div class="counter @voteCss">
        <h6>@Model.Entity.TotalRatings.ToPrettyInt()</h6> @voteText.Value
    </div>
    <div class="counter @ratingCss">
        <h6>@Model.Entity.SummedRating.ToPrettyInt()</h6> @T["rating"]
    </div>
</div>
<div class="list-body">
    
    <div>

        <div class="float-right">
            

            <ol class="list-inline d-inline text-muted text-right">
                
                @if (Model.Tags != null)
                {
                    var sb = new System.Text.StringBuilder();
                    var tagList = Model.Tags.ToList();
                    if (tagList.Count > 0)
                    {
                        sb.Append(T["Tags:"].Value).Append(" ");
                        for (var i = 0; i < tagList.Count; i++)
                        {
                            sb.Append(tagList[i].Name);
                            if (i < tagList.Count - 1)
                            {
                                sb.Append(", ");
                            }
                        }
                    }
                
                    <li class="list-inline-item">
                        <span title="@sb.ToString()" data-toggle="tooltip">
                            @tagList.Count.ToPrettyInt() <i class="fal fa-tag"></i>
                        </span>
                    </li>

                }
                @if (Model.Entity.TotalReplies > 0)
                {
                    <li class="list-inline-item">
                        <span title="@T["Comments"]" data-toggle="tooltip">
                            @Model.Entity.TotalReplies.ToPrettyInt() <i class="fal fa-comment-alt-lines"></i>
                        </span>
                    </li>
                }
                @if (Model.Entity.TotalViews > 0)
                {
                    <li class="list-inline-item">
                        <span title="@T["Views"]" data-toggle="tooltip">
                            @Model.Entity.TotalViews.ToPrettyInt() <i class="fal fa-eye"></i>
                        </span>
                    </li>
                }
            </ol>
        </div>

        <a asp-route-area="Plato.Ideas" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.Id" asp-route-opts.alias="@Model.Entity.Alias" class="font-weight-bold">@Model.Entity.Title</a>
        @if (Model.Entity.IsPinned)
        {
            <span title="@T["This idea is pinned and is probably important"]" data-toggle="tooltip" class="d-inline-block mx-1">
                <i class="fal fa-thumbtack"></i>
            </span>
        }
        @if (Model.Entity.IsLocked)
        {
            <span title="@T["This idea is locked and is not accepting new comments"]" data-toggle="tooltip" class="d-inline-block mx-1">
                <i class="fal fa-lock"></i>
            </span>
        }
        @if (Model.Labels != null)
        {
            <span class="pl-2">
                @foreach (var label in Model.Labels)
                {
                    <a asp-route-area="Plato.Ideas.Labels" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.labelId="@label.Id" asp-route-opts.alias="@label.Alias" title="@label.Description" class="btn btn-sm label font-weight-bold" style="background-color: @label.BackColor; color: @label.ForeColor">
                        @label.Name
                    </a>
                }
            </span>
        }
    </div>
    <div>
        
        @if (details?.LatestUsers != null)
        {
            <div class="avatar-group float-right">
                @foreach (var user in details.LatestUsers)
                {
                    var replies = user.TotalReplies == 1
                        ? "reply"
                        : "replies";
                    <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@user.Id" asp-route-opts.alias="@user.Alias">
                        <avatar data-toggle="tooltip" title="@user.DisplayName - @user.TotalReplies.ToPrettyInt() @T[replies]" class="avatar avatar-sm" url="@user.Avatar.Url"/>
                    </a>
                }
            </div>
        }

        @if (Model.Entity.CreatedUserId > 0)
        {
            <span>
                @T["Suggested By"]
                <a asp-route-area="Plato.Users" asp-route-controller="Home" asp-route-action="Display" asp-route-opts.id="@Model.Entity.CreatedUserId" asp-route-opts.alias="@Model.Entity.CreatedBy.Alias">@Model.Entity.CreatedBy.DisplayName</a>,
            </span>
        }
        <date utc="@Model.Entity.CreatedDate" itemprop="createdDate" data-toggle="tooltip"/>
        @if (@Model.Channel != null)
        {
            <span>@T["in"]</span>
            <a asp-route-area="Plato.Ideas.Categories" asp-route-controller="Home" asp-route-action="Index" asp-route-opts.categoryId="@Model.Channel.Id" asp-route-opts.alias="@Model.Channel.Alias">
                @Model.Channel.Name
            </a>
        }
        @if (Model.Entity.IsPrivate)
        {
            <span class="badge badge-primary" data-toggle="tooltip" title="@T["This idea is hidden and only visible as you have permission to view hidden ideas"]">@T["Hidden"]</span>
        }
        @if (Model.Entity.IsSpam)
        {
            <span class="badge badge-info" data-toggle="tooltip" title="@T["This idea has been flagged as SPAM and is only visible as you have permission to view ideas flagged as SPAM"]">@T["SPAM"]</span>
        }
        @if (Model.Entity.IsDeleted)
        {
            <span class="badge badge-danger" data-toggle="tooltip" title="@T["This idea has been deleted and is only visible as you have permission to view deleted ideas"]">@T["Deleted"]</span>
        }
    </div>
</div>
