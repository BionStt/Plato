@model EntityViewModel<Question, Answer>

<div class="list-row">
    <navigation name="question-details"
                model="Model.Entity"
                class="list-left list-inline p-0" />
    <div class="list-body reply-body">
        <card>
            <card-title>
                <h6 class="card-title d-inline-block">@T["Question"]</h6>           
                @if (Model.Entity.IsPrivate)
                {
                    if (Model.Entity.CreatedUserId == base.CurrentUser?.Id)
                    {
                        <span class="badge badge-warning" data-toggle="tooltip" title="@T["This question is private and only visible as you are the question author"]">@T["Private"]</span>
                    }
                    else
                    {
                        <span class="badge badge-warning" data-toggle="tooltip" title="@T["This question is private and only visible as you have permission to view private questions"]">@T["Private"]</span>
                    }
                }

                @if (Model.Entity.IsHidden)
                {
                    <span data-toggle="tooltip" title="@T["This question is hidden and only visible as you have permission to view hidden questions"]" class="badge badge-primary">@T["Hidden"]</span>
                }
                @if (Model.Entity.IsSpam)
                {
                    <span class="badge badge-info" data-toggle="tooltip" title="@T["This question has been flagged as SPAM and is only visible as you have permission to view questions flagged as SPAM"]">@T["SPAM"]</span>
                }
                @if (Model.Entity.IsDeleted)
                {
                    <span class="badge badge-danger" data-toggle="tooltip" title="@T["This question has been deleted and is only visible as you have permission to view deleted questions"]">@T["Deleted"]</span>
                }
                <navigation name="question"
                            model="Model.Entity"
                            class="nav navbar p-0 float-right"
                            child-ul-css-class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in" 
                            child-ul-inner-css-class="min-w-200 max-h-250 overflow-auto" />
            </card-title>
            <card-body class="card-body-flush">
                <div class="markdown-body entity-body question-body p-3" data-provide="markdownBody">
                    @Html.Raw(@Model.Entity.Html)
                    @if (!String.IsNullOrEmpty(Model.Entity.CreatedBy.SignatureHtml))
                    {
                        <div>
                            @Html.Raw(@Model.Entity.CreatedBy.SignatureHtml)
                        </div>
                    }
                </div>
                <navigation name="question-footer"
                            model="Model.Entity"
                            enable-list="false" />
            </card-body>
        </card>
    </div>
</div>
