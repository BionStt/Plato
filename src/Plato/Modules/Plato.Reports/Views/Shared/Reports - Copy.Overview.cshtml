@using Plato.Internal.Models.Extensions
@model OverviewReportViewModel
@{
    var pageViewsLabels = Model.PageViews?.SerializeLabels() ?? "[]";
    var pageViewsData = Model.PageViews?.SerializeCounts() ?? "[]";
    var pageViewsByFeatureLabels = Model.PageViewsByFeature?.SerializeLabels() ?? "[]";
    var pageViewsByFeatureData = Model.PageViewsByFeature?.SerializeCounts() ?? "[]";
    var newUsersLabels = Model.NewUsers?.SerializeLabels() ?? "[]";
    var newUsersData = Model.NewUsers?.SerializeCounts() ?? "[]";
    var engagementsLabels = Model.Engagements?.SerializeLabels() ?? "[]";
    var engagementsData = Model.Engagements?.SerializeCounts() ?? "[]";
}

<div class="row">
    <div class="col-lg-8 col-md-12 col-sm-12">

      
        
    </div>
    <div class="col-lg-4 col-md-12 col-sm-12">

     


    </div>
</div>

<div class="row">
    <div class="col-lg-6 col-md-12 col-sm-12">
        <card>
            <card-body>

                <i class="fal fa-user float-right"></i>
                @if (Model.NewUsers != null)
                {
                    <h5 class="d-inline">@Model.NewUsers.Total().ToPrettyInt()</h5>
                }
                else
                {
                    <h5>0</h5>
                }
                <br />
                @T["Sign Ups"]

                <div class="position-relative mt-3" style="height: 150px;">
                    <canvas id="newUsersChart" class="w-100"></canvas>
                </div>
            </card-body>
        </card>
    </div>
    <div class="col-lg-6 col-md-12 col-sm-12">
        <card>
            <card-body>

                <i class="fal fa-thumbs-up float-right"></i>
                @if (Model.Engagements != null)
                {
                    <h5 class="d-inline">@Model.Engagements.Total().ToPrettyInt()</h5>
                }
                else
                {
                    <h5>0</h5>
                }
                <br />
                @T["Engagements"]
                <div class="position-relative mt-3" style="height: 150px;">
                    <canvas id="engagementsChart" class="w-100"></canvas>
                </div>

            </card-body>
        </card>
    </div>
</div>

<script section="Footer">

    if (typeof window.$.Plato.Reports === "undefined") {
        throw new Error("$.Plato.Reports Required");
    }

    if (typeof window.$.Plato.Charts === "undefined") {
        throw new Error("$.Plato.Charts Required");
    }

    $(function(win, doc, $) {

        "use strict";

        var app = win.$.Plato,
            charts = win.$.Plato.Charts;

        app.ready(function() {

            // ---------
            // View by feature
            // ---------

            // ---------------
            // Page views
            // ---------------

         

            // ---------------
            // New Users
            // ---------------

            charts.initBar("newUsersChart", {
                labels: @Html.Raw(newUsersLabels),
                datasets: [
                    {
                        label: 'New Users',
                        fill: true,
                        backgroundColor: Chart.helpers.color(app.ui.chartColors.blue).alpha(0.1).rgbString(),
                        borderColor: app.ui.chartColors.blue,
                        borderWidth: 1,
                        lineWidth: 1,
                        pointRadius: 0,
                        pointHoverRadius: 0,
                        data: @Html.Raw(newUsersData)
                    }
                ]
            });

            // ---------------
            // Engagements
            // ---------------

            charts.initBar("engagementsChart", {
                labels: @Html.Raw(engagementsLabels),
                datasets: [
                    {
                        label: 'Engagements',
                        fill: true,
                        backgroundColor: Chart.helpers.color(app.ui.chartColors.blue).alpha(0.1).rgbString(),
                        borderColor: app.ui.chartColors.blue,
                        borderWidth: 1,
                        lineWidth: 1,
                        pointRadius: 0,
                        pointHoverRadius: 0,
                        data: @Html.Raw(engagementsData)
                    }
                ]
            });

        });

    }(window, document, jQuery));

</script>