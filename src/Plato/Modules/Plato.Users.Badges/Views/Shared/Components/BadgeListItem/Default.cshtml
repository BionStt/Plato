@model BadgeEntry
@{
    var times = Model.Details.AwardedCount == 1
        ? T["time"].Value
        : T["times"].Value;
    var text = $"{Model.Details.AwardedCount} {times}";
    var awardedText = T["Awarded {0}"].Value.Replace("{0}", text);
}

<div class="list-group-item list-group-item-action border-0 col-lg-4 col-md-6 col-sm-12 p-0 m-0">
    <div class="p-3">
        <div class="d-block">
            <div class="d-inline-block">
                <div class="medallion medallion-@Model.Level.ToString().ToLower()">
                    @if (Model.BonusPoints > 0)
                    {
                        <span class="badge badge-primary" data-toggle="tooltip" title="@T["Bonus Points"]">
                            @Model.BonusPoints.ToPrettyInt()
                        </span>
                    }
                    <i class="@Model.BackgroundIconCss medallion-bg"></i>
                    <i class="@Model.IconCss medallion-icon"></i>
                </div>
            </div>
        </div>
        <div class="d-block my-2">
            <div class="badge-description">
                <h6>@Model.Name</h6>
                <span class="text-muted">
                    @Model.Description
                </span>
            </div>
            <div class="badge-details" style="display: none;">
                <h6>@awardedText</h6>
                <div class="text-muted">
                    @if (Model.Details?.LastAwardedDate != null){
             
                        @T["Last Awarded"] <date utc="@Model.Details.LastAwardedDate" />
                    }
                    else
                    {
                        @T["This badge has not been awarded yet"]
                    }
                </div>
            </div>
        </div>
  
    </div>

</div>

