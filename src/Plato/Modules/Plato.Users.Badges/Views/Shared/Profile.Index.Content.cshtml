@using Plato.Badges.Models
@model UserBadgesIndexViewModel

@*@{
    var badgesList = Model.Badges.ToList();
    var goldBadges = @badgesList.Where(b => b.Level == BadgeLevel.Gold).ToList().Count;
    var silverBadges = @badgesList.Where(b => b.Level == BadgeLevel.Silver).ToList().Count;
    var bronzeBadges = @badgesList.Where(b => b.Level == BadgeLevel.Bronze).ToList().Count;
    var badgesText = badgesList.Count == 1
        ? "Badge"
        : "Badges";
}*@



@await DisplayAsync(new View("BadgeList", new
{
    options = @Model.BadgesIndexViewModel.Options,
}))





@*<card class="card card-body-flush">
    <card-title>

        <h6 class="card-title float-left">
            @badgesList.Count @T[badgesText]
        </h6>
        <span class="text-muted float-right">
            @goldBadges
            @T["Gold"],
            @silverBadges
            @T["Silver"],
            @bronzeBadges
            @T["Bronze"],
        </span>

    </card-title>
    <card-body>

        @if (badgesList.Count > 0)
        {
            <div class="list-group list-group-flush list-group-hover">
                <div class="row no-gutters text-center">
                    @foreach (var badge in badgesList.OrderBy(b => b.Level))
                    {
                        <div class="list-group-item list-group-item-action border-0 col-lg-4 col-md-6 col-sm-12 p-0">
                            <div class="p-3">
                                <span class="float-right">
                                    <span class="btn btn-sm btn-secondary" data-toggle="tooltip" title="@T["Bonus Points"]">
                                        @badge.BonusPoints.ToPrettyInt()
                                    </span>
                                </span>
                                <div class="d-inline-block">
                                    <div class="badge badge-@badge.Level.ToString().ToLower()">
                                        <i class="@badge.BackgroundIconCss badge-bg"></i>
                                        <i class="@badge.IconCss badge-icon"></i>
                                    </div>
                                </div>
                                <br />
                                <div class="d-inline-block">
                                    <h6>@badge.Name</h6>
                                    <span class="text-muted">
                                        @badge.Description
                                    </span>
                                </div>
                            </div>

                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <span class="text-muted">
                @T["No badges awarded"]
            </span>
        }



    </card-body>
</card>*@


