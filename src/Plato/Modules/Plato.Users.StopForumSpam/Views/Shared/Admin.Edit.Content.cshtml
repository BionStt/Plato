@model StopForumSpamSettingsViewModel
@using Newtonsoft.Json
@{
    var json = JsonConvert.SerializeObject(Model.SpamLevels);
}
@ViewData["Test"]

<form asp-route-action="Index" method="post" enctype="multipart/form-data">
    <card>
        <card-title>
            <h6 class="card-title">@T["Settings"]</h6>
        </card-title>
        <card-body>

            <div class="row">
                <div class="col">
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="ApiKey">
                            <label asp-for="@Model.ApiKey">
                                <strong>@T["Api Key"]</strong>
                                <span asp-validation-for="@Model.ApiKey" class="text-danger"></span>
                                <br />
                                <span class="text-muted">@T["Your StopForumSpam.com API key."]</span>
                            </label>
                            <input asp-for="@Model.ApiKey" class="form-control" autofocus />
                        </div>
                    </fieldset>

                    <fieldset>
                        <div class="form-group" asp-validation-class-for="SpamLevel">

                            <label asp-for="@Model.SpamLevel">
                                <strong>@T["Aggression Level"]</strong><br />
                                <span class="text-muted">@T["Customize how aggressively the SPAM filter should act."]</span>
                            </label>
                            <br />
                            <div class="alert alert-secondary">
                                <div class="text-center">
                                    <div id="slider" class="d-inline-block col-9">
                                        <div class="float-left">@T["Low"]</div>
                                        <div class="float-right">@T["High"]</div>
                                        <input asp-for="@Model.SpamLevel" style="width: 100%;" />
                                        <div id="sliderResults" class="pt-3">
                                            <h6>@Model.SelectedSpamLevel?.Name</h6>
                                            <div class="text-muted">@Model.SelectedSpamLevel?.Description</div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </fieldset>
                    
                    <fieldset>
                        
                        <table id="tblPermissions" class="table">
                            @foreach (var category in Model.CategorizedSpamOperations.Keys)
                            {
                                <thead>
                                    <tr>
                                        <th class="col-12 bg-light">
                                            <h6>@category</h6>
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                @foreach (var operation in Model.CategorizedSpamOperations[category])
                                {
                                    var existingOptions = Model.SpamOperations.FirstOrDefault(o => o.Name.Equals(operation.Name, StringComparison.OrdinalIgnoreCase));
                                    var contentId = "panel" + operation.Name;
                                    <tr>
                                        <td class="col-12">
                                         
                                            <div class="card card-body-flush">

                                                <div class="card-header">
                                                    <h6>
                                                        <a data-toggle="collapse" href="#@contentId" aria-expanded="true" aria-controls="collapseOne">
                                                            @T[operation.Name]
                                                        </a>
                                                    </h6>
                                                    @if (!string.IsNullOrEmpty(operation.Description))
                                                    {
                                                        @T[operation.Description]
                                                    }
                                                </div>
                                                <div id="@contentId" class="card-body collapse">

                                                    <ul class="list-group list-group-flush list-group-hover">
                                                        <li class="list-group-item list-group-item-action">
                                                            <label class="row">
                                                                <span class="col-10">
                                                                    <h6>@T["Flag As Spam"]</h6>
                                                                    @T["If enabled any entry detected as SPAM that is persisted to the Plato database will be automatically flagged as SPAM. Entries will only be visible to those who have permission to view SPAM."]
                                                                </span>
                                                                <span class="col-2 text-right">
                                                                    <span class="switch switch-round">
                                                                        <input class="form-check-input" type="checkbox" value="flagAsSpam" name="flagAsSpam.@operation.Name" checked="@existingOptions?.FlagAsSpam"/>
                                                                        <span class="switch-slider"></span>
                                                                    </span>
                                                                </span>
                                                            </label>
                                                        </li>
                                                        <li class="list-group-item list-group-item-action">
                                                            <label class="row">
                                                                <span class="col-10">
                                                                    <h6>@T["Notify Admins"]</h6>
                                                                    @T["If enabled trigger a web & email notification for any entry detected as SPAM to all users within the administrators role with a link to review the entry. If disabled no administrator notifications will be sent."]"]
                                                                </span>
                                                                <span class="col-2 text-right">
                                                                    <span class="switch switch-round">
                                                                        <input class="form-check-input" type="checkbox" value="notifyAdmin" name="notifyAdmin.@operation.Name" checked="@existingOptions?.NotifyAdmin"/>
                                                                        <span class="switch-slider"></span>
                                                                    </span>
                                                                </span>
                                                            </label>
                                                        </li>
                                                        <li class="list-group-item list-group-item-action">
                                                            <label class="row">
                                                                <span class="col-10">
                                                                    <h6>@T["Notify Staff"]</h6>
                                                                    @T["If enabled trigger a web & email notification for any entry detected as SPAM to all users within the staff role with a link to review the entry. If disabled no staff notifications will be sent."]
                                                                </span>
                                                                <span class="col-2 text-right">
                                                                    <span class="switch switch-round">
                                                                        <input class="form-check-input" type="checkbox" value="notifyStaff" name="notifyStaff.@operation.Name" checked="@existingOptions?.NotifyStaff"/>
                                                                        <span class="switch-slider"></span>
                                                                    </span>
                                                                </span>
                                                            </label>
                                                        </li>
                                                        <li class="list-group-item list-group-item-action">
                                                            <label class="row">
                                                                <span class="col-10">
                                                                    <h6>@T["Alter Database"]</h6>
                                                                    @T["If enabled the Plato database will be modified even if an entry is detected as SPAM. If disabled the Plato database will not be modified if an entry is detected as SPAM. "]
                                                                </span>
                                                                <span class="col-2 text-right">
                                                                    <span class="switch switch-round">
                                                                        <input class="form-check-input" type="checkbox" value="allowAlter" name="allowAlter.@operation.Name" checked="@existingOptions?.AllowAlter"/>
                                                                        <span class="switch-slider"></span>
                                                                    </span>
                                                                </span>
                                                            </label>
                                                        </li>
                                                        <li class="list-group-item">
                                                            <label class="row">
                                                                <span class="col-12">
                                                                    <h6>@T["Error Message"]</h6>
                                                                    @T["Customize the error message presented to users if they perform this operation is detected as SPAM."]
                                                                </span>
                                                                <span class="col-12 pt-2">
                                                                    <textarea rows="6" class="form-control" name="customMessage.@operation.Name">@existingOptions?.Message</textarea>
                                                                </span>
                                                            </label>
                                                        </li>
                                                    </ul>

                                                </div>

                                            </div>
                                      
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            }
                        </table>

                    </fieldset>

                </div>
            </div>
        
        </card-body>
    </card>

    <card class="card mt-4">
        <card-footer>
            <button class="btn btn-primary" type="submit">@T["Save"]</button>
        </card-footer>
    </card>

</form>

<link rel="stylesheet" href="/css/vendors/bootstrap-slider.css" />
<script src="/js/vendors/bootstrap-slider.js" section="Footer"></script>

<script section="Footer">

    $(document).ready(function() {

        // Get slider
        var $slider = $('#slider').find("input");
        if ($slider.length === 0) {
            return;
        }

        // Prepare slider data
        var data = {
            json: @Html.Raw(json),
            ticks: function() {
                var ticks = [];
                for (var i = 0; i < this.json.length; i++) {
                    ticks.push(this.json[i].tick);
                }
                return ticks;
            },
            get: function(tick) {
                for (var i = 0; i < this.json.length; i++) {
                    if (this.json[i].tick === parseInt(tick)) {
                        return this.json[i];
                    }
                }
                return null;
            }
        }

        // Prepare slider
        $slider.slider({
            tooltip: 'always',
            ticks: data.ticks(),
            value: @Model.SpamLevel.ToString(),
            formatter: function(value) {
                var level = data.get(value);
                if (level == null) {
                    return "";
                }
                return level.name;
            },
            lock_to_ticks: true
        });

        // Slider onChange
        $slider.on("slide",
            function(e) {

                // Get level for selection
                var level = data.get(e.value);
                if (!level) {
                    return;
                }

                // Update text
                var $results = $("#sliderResults");
                if ($results.length > 0) {
                    $results.find("h6").text(level.name);
                    $results.find("div").text(level.description);
                }
             
            });

    });

</script>