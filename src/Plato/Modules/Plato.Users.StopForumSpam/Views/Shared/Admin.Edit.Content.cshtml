@model StopForumSpamSettingsViewModel
@using Newtonsoft.Json
@{
    var json = JsonConvert.SerializeObject(Model.AggressionLevels);
    var i = 0;
    var count = Model.AggressionLevels?.Count();
}
@ViewData["Test"]

<form asp-route-action="Index" method="post" enctype="multipart/form-data">

    <card>
        <card-title>
            <h6 class="card-title">@T["Settings"]</h6>
        </card-title>
        <card-body>

            <div class="row">
                <div class="col">
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="ApiKey">
                            <label asp-for="@Model.ApiKey">
                                <strong>@T["Api Key"]</strong>
                                <span asp-validation-for="@Model.ApiKey" class="text-danger"></span>
                                <br />
                                <span class="text-muted">@T["Your StopForumSpam.com API key."]</span>
                            </label>
                            <input asp-for="@Model.ApiKey" class="form-control" autofocus />
                        </div>
                    </fieldset>    
                </div>
            </div>
            
            <div class="row">
                <div class="col">
                    
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="UserNameThreshold">
                            
                            <label for="level">
                                <strong>@T["Filter Level"]</strong>
                                <br/>
                                <span class="text-muted">@T["The number of times a username can appear before it's flagged as SPAM."]</span>
                            </label>
                            <br/>
                            
                            <div class="alert alert-secondary">
                         
                                <div class="text-center">
                                    <div class="d-inline-block col-9">
                            
                                        <input id="level" style="width: 100%;" name="level" type="text"/>
                                        <div id="sliderResults" class="pt-3">
                                            <h6>@Model.SelectedAggressionLevel?.Name</h6>
                                            <div class="text-muted">@Model.SelectedAggressionLevel?.Description</div>
                                        </div>
                                            
                                    </div>
                                </div>

                            </div>
                        
                        </div>
                    </fieldset>       
                    
                </div>
            </div>
            
            <div class="row">
                <div class="col">
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="UserNameThreshold">
                            <label asp-for="@Model.UserNameThreshold">
                                <strong>@T["Username Threshold"]</strong>
                                <span asp-validation-for="@Model.UserNameThreshold" class="text-danger"></span>
                                <br />
                                <span class="text-muted">@T["The number of times a username can appear before it's flagged as SPAM."]</span>
                            </label>
                            <input asp-for="@Model.UserNameThreshold" class="form-control" autofocus />
                        </div>
                    </fieldset>       
                </div>
                <div class="col">
                
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="EmailThreshold">
                            <label asp-for="@Model.EmailThreshold">
                                <strong>@T["Email Threshold"]</strong>
                                <span asp-validation-for="@Model.EmailThreshold" class="text-danger"></span>
                                <br />
                                <span class="text-muted">@T["The number of times an email can appear before it's flagged as SPAM."]</span>
                            </label>
                            <input asp-for="@Model.EmailThreshold" class="form-control" autofocus />
                        </div>
                    </fieldset>       
                </div>
                <div class="col">
                    <fieldset>
                        <div class="form-group" asp-validation-class-for="IpAddressThreshold">
                            <label asp-for="@Model.IpAddressThreshold">
                                <strong>@T["IP Address Threshold"]</strong>
                                <span asp-validation-for="@Model.IpAddressThreshold" class="text-danger"></span>
                                <br />
                                <span class="text-muted">@T["The number of times an IP address can appear before it's flagged as SPAM."]</span>
                            </label>
                            <input asp-for="@Model.IpAddressThreshold" class="form-control" autofocus />
                        </div>
                    </fieldset>       
                </div>
            </div>
            
        </card-body>
    </card>

    <card class="card mt-4">
        <card-footer>
            <button class="btn btn-primary" type="submit">@T["Save"]</button>
        </card-footer>
    </card>

</form>

<link rel="stylesheet" href="/css/vendors/bootstrap-slider.css" />
<script src="/js/vendors/bootstrap-slider.js" section="Footer"></script>

<script section="Footer">

    $(document).ready(function() {

        // Get slider
        var $slider = $('#level');
        if ($slider.length === 0) {
            return;
        }

        // Prepare slider data
        var data = {
            json: @Html.Raw(json),
            ticks: function() {
                var ticks = [];
                for (var i = 0; i < this.json.length; i++) {
                    ticks.push(this.json[i].tick);
                }
                return ticks;
            },
            get: function(tick) {
                for (var i = 0; i < this.json.length; i++) {
                    if (this.json[i].tick === parseInt(tick)) {
                        return this.json[i];
                    }
                }
                return null;
            }
        }
 
        // Prepare slider
        $slider.slider({
            tooltip: 'always',
            ticks: data.ticks(),
            formatter: function(value) {
                return 'Current value: ' + value;
            },
            lock_to_ticks: true
        });

        // Slider onChange
        $slider.on("slide",
            function(e) {
                var level = data.get(e.value);
                if (level == null) {
                    return;
                }
                var $results = $("#sliderResults");
                if ($results.length > 0) {
                    $results.find("h6").text(level.name);
                    $results.find("div").text(level.description);
                }
            });

    });

</script>