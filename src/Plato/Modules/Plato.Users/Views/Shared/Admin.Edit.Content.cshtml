@model EditUserViewModel

@if (Model.IsVerified && !Model.IsNewUser)
{
    <div class="alert alert-info">
        <div class=" float-right">
            <authorize asp-permission="@Plato.Users.Permissions.UserToVerify.Name">
                <authorize-success>
                    <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="InvalidateUser" asp-route-id="@Model.Id">@T["Remove Verified"]</a>
                </authorize-success>
            </authorize>
            <i class="fal fa-info-circle ml-2 align-middle" title="@T["A verified user is someone who has been manually identified as a genuine human by a site administrator or staff member. Verified users will receive a special icon and can skip some SPAM protections."]" data-toggle="tooltip"></i>
        </div>
        @if (Model.IsVerifiedUpdatedUser != null)
        {
            <span class="is-verified">
                @T["Verified by"] <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="Edit" asp-route-id="@Model.IsVerifiedUpdatedUser.Id">@Model.IsVerifiedUpdatedUser.DisplayName</a>, <date utc="Model.IsVerifiedUpdatedDate"></date>
            </span>
        }
        else
        {
            <span class="is-verified">
                @T["This user has been verified"]
            </span>
        }
    </div>
}

@if (Model.IsStaff && !Model.IsNewUser)
{
    <div class="alert alert-info">
        <div class=" float-right">
            <authorize asp-permission="@Plato.Users.Permissions.UserToStaff.Name">
                <authorize-success>
                    <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="FromStaff" asp-route-id="@Model.Id">@T["Remove Staff"]</a>
                </authorize-success>
            </authorize>
            <i class="fal fa-info-circle ml-2 align-middle" title="@T["A staff member is someone who represents a trusted user within your organization. Staff will receive a special icon and will skip all SPAM protections."]" data-toggle="tooltip"></i>
        </div>
        @if (Model.IsStaffUpdatedUser != null)
        {
            <span class="is-staff">
                @T["Added to Staff by"] <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="Edit" asp-route-id="@Model.IsStaffUpdatedUser.Id">@Model.IsStaffUpdatedUser.DisplayName</a>, <date utc="Model.IsStaffUpdatedDate"></date>
            </span>
        }
        else
        {
            <span class="is-staff">
                @T["This user has been marked as Staff"]
            </span>
        }
    </div>
}

@if (Model.IsSpam && !Model.IsNewUser)
{
    <div class="alert alert-warning">
        <div class="float-right">
            <authorize asp-permission="@Plato.Users.Permissions.UserToSpam.Name">
                <authorize-success>
                    <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="RemoveSpam" asp-route-id="@Model.Id">@T["Remove SPAM"]</a>
                </authorize-success>
            </authorize>
            <i class="fal fa-info-circle ml-2 align-middle" title="@T["This user will be hidden from regular users and and only visible via the admin dashboard. Contributions from this user will be automatically flagged as SPAM and will only be visible to those with permission to view contributions flagged as SPAM."]" data-toggle="tooltip"></i>
        </div>
        @if (Model.IsSpamUpdatedUser != null)
        {
            <span class="is-spam">
                @T["Added to SPAM by"] <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="Edit" asp-route-id="@Model.IsSpamUpdatedUser.Id">@Model.IsSpamUpdatedUser.DisplayName</a>, <date utc="Model.IsSpamUpdatedDate"></date>
            </span>
        }
        else
        {
            <span class="is-spam">
                @T["This user has been flagged as SPAM"]
            </span>
        }
    </div>
}

@if (Model.IsBanned && !Model.IsNewUser)
{
    <div class="alert alert-danger">
        <div class="float-right">
            <authorize asp-permission="@Plato.Users.Permissions.UserToBanned.Name">
                <authorize-success>
                    <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="RemoveBan" asp-route-id="@Model.Id">@T["Remove Ban"]</a>
                </authorize-success>
            </authorize>
            <i class="fal fa-info-circle ml-2 align-middle" title="@T["Banned users will be logged out and cannot login again or post new contributions. Banned users will also be hidden from regular users and and only visible via the admin dashboard."]" data-toggle="tooltip"></i>
        </div>
        @if (Model.IsBannedUpdatedUser != null)
        {
            <span class="is-banned">
                @T["Banned by"] <a asp-route-area="Plato.Users" asp-route-controller="Admin" asp-route-action="Edit" asp-route-id="@Model.IsBannedUpdatedUser.Id">@Model.IsBannedUpdatedUser.DisplayName</a>, <date utc="Model.IsBannedUpdatedDate"></date>
            </span>
        }
        else
        {
            <span class="is-banned">
                @T["This user has been banned"]
            </span>
        }
    </div>
}

<card>
    <card-title>
        <h6 class="card-title d-inline-block">@T["Details"]</h6>
        <navigation name="admin-user"
                    class="nav navbar p-0 float-right"
                    child-ul-css-class="dropdown-menu dropdown-menu-right anim anim-2x anim-scale-in" />
    </card-title>
    <card-body>
        <div class="form-group" asp-validation-class-for="DisplayName">
            <label asp-for="DisplayName"><strong>@T["Display Name"]</strong></label>
            <span asp-validation-for="DisplayName" class="text-danger"></span>
            <input asp-for="DisplayName" class="form-control" autofocus />
        </div>
        <div class="form-group" asp-validation-class-for="UserName">
            <label asp-for="UserName"><strong>@T["Username"]</strong></label>
            <span asp-validation-for="UserName" class="text-danger"></span>
            @if (!Model.IsNewUser)
            {
                <i class="fal fa-info-circle ml-2 align-middle" title="@T["If the username changes this user will be automatically logged out and will be required to login again."]" data-toggle="tooltip"></i>
            }
            <input asp-for="UserName" class="form-control" />
        </div>
        <div class="form-group" asp-validation-class-for="Email">
            <label asp-for="Email"><strong>@T["Email"]</strong></label>
            <span asp-validation-for="Email" class="text-danger"></span>
            <input asp-for="Email" placeholder="@T["email@address.com"]" class="form-control" />
        </div>
        @if (Model.DisplayPasswordFields)
        {
            <div class="form-group" asp-validation-class-for="Password">
                <label asp-for="Password"><strong>@T["Password"]</strong></label>
                <span asp-validation-for="Password" class="text-danger"></span>
                <input asp-for="Password" type="password" class="form-control" />
            </div>
            <div class="form-group" asp-validation-class-for="PasswordConfirmation">
                <label asp-for="PasswordConfirmation"><strong>@T["Password Confirmation"]</strong></label>
                <span asp-validation-for="PasswordConfirmation" class="text-danger"></span>
                <input asp-for="PasswordConfirmation" type="password" class="form-control" />
            </div>
        }
        @if (!Model.IsNewUser)
        {
            <div class="form-group" asp-validation-class-for="Location">
                <label asp-for="Location"><strong>@T["Location"]</strong></label>
                <span asp-validation-for="Email" class="text-danger"></span>
                <input asp-for="Location" placeholder="@T["United Kingdom"]" class="form-control" />
            </div>
            <div class="form-group" asp-validation-class-for="Url">
                <label asp-for="Url"><strong>@T["Url"]</strong></label>
                <span asp-validation-for="Email" class="text-danger"></span>
                <input asp-for="Url" placeholder="@T["https://"]" class="form-control" />
            </div>
            <div class="form-group" asp-validation-class-for="Bio">
                <label asp-for="Biography"><strong>@T["Bio"]</strong></label>
                <span asp-validation-for="Biography" class="text-danger"></span>
                <textarea asp-for="Biography" placeholder="@T["add a short bio..."]" rows="3" class="form-control"></textarea>
            </div>

        }
    </card-body>
</card>

@if (!Model.IsNewUser)
{
    <card>
        <card-title>
            <h6 class="card-title d-inline-block">@T["Signature"]</h6>
            <div class="nav navbar p-0 float-right">
                <ul class="nav">
                    <li class="nav-item">
                        <a href="#editSignature" data-toggle="modal" data-provide="tooltip" title="@T["Edit"]" class="nav-link text-muted">
                            <i class="fal fa-pencil"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </card-title>
        <card-body>

            @if (!String.IsNullOrEmpty(Model.Signature))
            {
                <div class="markdown-body">
                    @Html.Raw(Model.SignatureHtml)
                </div>
            }
            else
            {
                @T["No signature provided"]
            }

        </card-body>
    </card>
    <div class="modal fade" id="editSignature" tabindex="-1" role="dialog" aria-labelledby="editSignature" aria-hidden="true">
        <div class="modal-dialog modal-3x modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        @T["Signature"]
                    </h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    @await DisplayAsync(new View("Editor", new
                    {
                        value = Model.Signature,
                        placeHolderText = T["A users signature will appear below any posts or comments they contribute..."],
                        htmlName = @Model.SignatureHtmlName,
                        Rows = 8
                    }))

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">
                        @T["Cancel"]
                    </button>
                    <button type="submit" class="btn btn-primary">
                        @T["Save Changes"]
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<input asp-for="Id" type="hidden" />
